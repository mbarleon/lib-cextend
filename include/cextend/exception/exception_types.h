/*
** EPITECH PROJECT, 2025
** coding-style-war-crimes
** File description:
** exception_types
*/

#ifndef EXCEPTION_TYPES_H_
    #define EXCEPTION_TYPES_H_
    #include <setjmp.h>
    #include <stdbool.h>
    #include "../types.h"

    #define __CEXTEND_EXCEPTION_CONTEXT_ALIGNMENT 16

typedef enum {
    CEXTEND_EXCEPTION = 0,

    CEXTEND_EXCEPTION_LOGIC_ERROR,
    CEXTEND_EXCEPTION_INVALID_ARGUMENT,
    CEXTEND_EXCEPTION_DOMAIN_ERROR,
    CEXTEND_EXCEPTION_LENGTH_ERROR,
    CEXTEND_EXCEPTION_OUT_OF_RANGE,
    CEXTEND_EXCEPTION_FUTURE_ERROR,
    CEXTEND_EXCEPTION_LOGIC_ERROR_MAX,

    CEXTEND_EXCEPTION_RUNTIME_ERROR,
    CEXTEND_EXCEPTION_RANGE_ERROR,
    CEXTEND_EXCEPTION_OVERFLOW_ERROR,
    CEXTEND_EXCEPTION_UNDERFLOW_ERROR,
    CEXTEND_EXCEPTION_REGEX_ERROR,
    CEXTEND_EXCEPTION_SYSTEM_ERROR,
    CEXTEND_EXCEPTION_TX_EXCEPTION,
    CEXTEND_EXCEPTION_NONEXISTENT_LOCAL_TIME,
    CEXTEND_EXCEPTION_AMBIGUOUS_LOCAL_TIME,
    CEXTEND_EXCEPTION_FORMAT_ERROR,
    CEXTEND_EXCEPTION_RUNTIME_ERROR_MAX,

    CEXTEND_EXCEPTION_BAD_TYPE,
    CEXTEND_EXCEPTION_BAD_TYPEID,
    CEXTEND_EXCEPTION_BAD_CAST,

    CEXTEND_EXCEPTION_BAD_FUNCTION_CALL,

    CEXTEND_EXCEPTION_BAD_ALLOC,
    CEXTEND_EXCEPTION_BAD_ARRAY_NEW_LENGTH,
    CEXTEND_EXCEPTION_BAD_ALLOC_MAX,

    CEXTEND_EXCEPTION_BAD_EXCEPTION,

    CEXTEND_EXCEPTION_MAX
} cextend_exception_types_t;

struct __attribute__((aligned(__CEXTEND_EXCEPTION_CONTEXT_ALIGNMENT)))
    cextend_exception_context_s {
    sigjmp_buf __env;
    cextend_private_t __internals;
};

typedef struct cextend_exception_context_s cextend_exception_context_t;

typedef vint_t cextend_exception_code_t;

#endif /* !EXCEPTION_TYPES_H_ */
